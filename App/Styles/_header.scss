@use 'variables' as v;
@use 'mixins' as m;

header {
  padding: 25rem 20rem;
  background-color: v.$white;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  z-index: 999;

  .hamburger {

    span {
      width: 25px;
      height: 2px;
      display: block;
      background-color: v.$black;
      transition: all 250ms ease-in-out;

      &:not(:last-child) {
        margin-bottom: 5px;
      }
    }

    &:hover {
      cursor: pointer;
    }
  } // hamburger


  .links {
    
    a {
      position: relative;
      color: v.$grayish-blue;
      transition: all 250ms ease-in-out;
    }

    a:not(:last-child) {
      margin-right: 30rem;
    }

    a:before {
      content: "";
      position: absolute;
      height: 5px;
      left: 0;
      right: 0;
      bottom: -36.5px;
      opacity: 0;
      background: v.$green-cyan-gradient;
      transition: all 250ms ease-in-out;
    }

    a:hover, a:hover:before {
      opacity: 1;
      color: v.$black;
    }

  }

  .turn-x {

      >:first-child {
      transform: rotate(45deg);
      transform-origin: 1px 2px;
    }

    >:nth-child(2) {
      animation: fadeOut 400ms ease-in-out forwards;
    }

    >:last-child {
      transform: rotate(-45deg);
      transform-origin: 4px 2px;
    }
  }
  

}


@keyframes fadeOut {
  from {
    transform: translateX(0);
    opacity: 1;
  } 

  90% {
    transform: translateX(-25px);
    opacity: 0.05;
  }

  to {
    transform: translateX(-30px);
    opacity: 0;
  }
}




// Media Queries
@include m.breakpoints-min-max(medium, x-large) {
  header {
    padding: 25rem 80rem;
  }
}


@include m.breakpoints-min(x-large) {
  body {
    padding: 94rem 0 0 0;
  }
  
  header {
    padding: 25rem 60rem;
  }
}
